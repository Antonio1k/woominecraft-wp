<?php

use WP_Mock\Tools\TestCase;

function plugin_basename() { return ''; }
function plugin_dir_url() { return ''; }
function plugin_dir_path() { return ''; }
function trailingslashit() { return ''; }

class WooMinecraftTest extends TestCase {

	/**
	 * @var Woo_Minecraft
	 */
	protected $module;

	public function setUp() {
		require_once 'src/includes/admin.php';
		require_once 'src/woominecraft.php';

		$this->module = Woo_Minecraft::get_instance();

		WP_Mock::setUp(); // TODO: Change the autogenerated stub
	}

	public function test_hooks() {

		WP_Mock::expectActionAdded( 'woocommerce_checkout_process', [ $this->module, 'check_player' ] );
		WP_Mock::expectActionAdded( 'woocommerce_checkout_update_order_meta', [ $this->module, 'save_commands_to_order' ] );
		WP_Mock::expectActionAdded( 'woocommerce_before_checkout_billing_form', [ $this->module, 'additional_checkout_field' ] );
		WP_Mock::expectActionAdded( 'woocommerce_thankyou', [ $this->module, 'thanks' ] );
		WP_Mock::expectActionAdded( 'template_redirect', [ $this->module, 'json_feed' ] );
		WP_Mock::expectActionAdded( 'save_post', [ $this->module, 'bust_command_cache' ] );

		$this->expectOutputString('' );

		$this->module->hooks();

		$this->assertConditionsMet();
	}

	public function test_get_json_order_args() {
		$default = [
			'posts_per_page' => '-1',
			'post_status'    => 'wc-completed',
			'post_type'      => 'shop_order',
			'meta_query'     => array(
				'relation' => 'AND',
				array(
					'key'     => '_wmc_commands_1',
					'compare' => 'EXISTS',
				),
				array(
					'key'     => '_wmc_delivered_1',
					'compare' => 'NOT EXISTS',
				),
			),
		];

		self::assertTrue( ( $default === $this->module->get_json_order_args( '1' ) ) );
	}

	//
	// public function test_json_feed() {
	// 	$_GET = [
	// 		'wmc_key' => 123
	// 	];
	//
	// 	WP_Mock::userFunction( 'sanitize_text_field', [
	// 		'args' => 123,
	// 		'times' => 5,
	// 		'return' => 123,
	// 	] );
	//
	// 	WP_Mock::passthruFunction( 'get_option' );
	// 	WP_Mock::userFunction( 'wp_list_pluck' )->with( 'wm_servers', 'key' )->andReturn( [ 123, 456 ] );
	// 	WP_Mock::userFunction( 'get_transient' )->andReturn( false );
	//
	// 	WP_Mock::onFilter( 'woo_minecraft_json_order_args' )->with( [] )->reply( 'fail' );
	//
	// 	$this->module->json_feed();
	// }

	public function tearDown() {
		WP_Mock::tearDown(); // TODO: Change the autogenerated stub
	}

}